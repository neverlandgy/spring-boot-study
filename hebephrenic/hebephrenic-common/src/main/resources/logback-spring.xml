<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<!--  
-scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true  
-scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。  
-           当scan为true时，此属性生效。默认的时间间隔为1分钟  
-debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。  
-  
- configuration 子节点为 appender、logger、root  
-->  
<configuration scan="true" scanPeriod="60 second" debug="false">
	<property resource="config/log.properties" />
	
	<conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
	<conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
	
	<property name="FILE_LOG_PATTERN" value="${FILE_LOG_PATTERN:-%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%15.15t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
	</appender>

	<appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.path}.debug.log</file>
		<!-- append: true,日志被追加到文件结尾; false,清空现存文件;默认是true -->
		<append>true</append>
		<!-- 是否支持多JVM同时操作同一个日志文件,如果多JVM同时操作同一个文件，则会出现日志不回滚、打出的日志串掉的场景 -->
		<prudent>false</prudent>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${log.path}-%d{yyyy-MM-dd}-%i.debug.zip</fileNamePattern>
			<maxHistory>30</maxHistory>
			<!-- 按时间回滚的同时，按文件大小来回滚 --> 
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>20MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>
		</filter>
	</appender>

	<appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.path}.error.log</file>
		<append>true</append>
		<prudent>false</prudent>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${log.path}-%d{yyyy-MM-dd}-%i.error.zip</fileNamePattern>
			<maxHistory>30</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>20MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<logger name="org.springframework" additivity="true" level="error" />
	<logger name="org.apache" additivity="true" level="error" />
	<logger name="org.mybatis" additivity="true" level="info" />
	
	<root>
		<level value="${log.root.level}" />
		<appender-ref ref="CONSOLE" />
		<appender-ref ref="DEBUG" />
		<appender-ref ref="ERROR" />
	</root>

</configuration>